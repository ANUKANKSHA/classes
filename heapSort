
class maxHeap
{
    int N,Q;
    vector<int> arr;
public:
    maxHeap()
    {
        cin>>N;
        int x;
        for(int i=0;i<N;i++)
            {
                cin>>x;
                arr.push_back(x);
            }
       Heap_sort();
       display();
    }
   
    void max_heapify(int i,int X)
    {
        int left=2*i+1;
        int right=2*i+2;
        int largest;
        if(left<X && arr[left]>arr[i])
            largest=left;
        else
            largest=i;
        if(right<X && arr[right]>arr[largest])
            largest=right;
        if(largest!=i)
        {
            int temp=arr[largest];
            arr[largest]=arr[i];
            arr[i]=temp;
            max_heapify(largest,X);
        }
    }
    void Heap_sort()
    {
        for(int i=(N/2)-1;i>=0;i--)
        {
            max_heapify(i,N);
        }
        int heapsize=N;
        for(int i=N-1;i>0;i--)
        {
            int temp=arr[0];
            arr[0]=arr[i];
            arr[i]=temp;
            heapsize--;
            max_heapify(0,heapsize);
        }
    }
    void display()
    {
            for(int i=0;i<arr.size();i++)
                cout<<arr[i]<<" ";
    }
};


